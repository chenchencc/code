题部分： ×:还需复习的  √：已经掌握的
demo1:两个栈实现一个队列 √
demo2:设计一个带有getMin的栈  √
demo3:用一个栈实现另一个栈的排序 √
demo4:打印两个有序链表的公共部分 √
demo5:在单链表和双链表中删除倒数第k个元素 √
demo6.链表反转 ×
demo7:单词反转
demo8:树的遍历（递归和非递归的方式及按层遍历）×
demo9:求一个环的个数 √
demo10:KMP判断一个字符串是否为另一个字符串的子串
demo11.打印一个正方形（对角线） √
demo12.打印正方形的‘之’字行  √
demo13.绕圈打印一个正方形
demo14.如何证明一个链表是一个环 √
demo15.反转部分链表 ×
demo16.判断一个链表是否是回文结构
demo17.判断两个单词是否互为变形词
demo18.字符串中数字串的求和
demo19.判断两个字符串是否互为旋转词
demo20.将整数字符串变为整数值
demo21.反转字符串
demo22.字符数组向右移动k个位置

demo23:合并排序，将两个已经排序的数组合并成一个数组，其中一个数组能容下两个数组的所有元素;
demo24:合并两个单链表;
demo25:倒序打印一个单链表;
demo26:给定一个单链表的头指针和一个指定节点的指针，在O(1)时间删除该节点;
demo27:找到链表倒数第K个节点;
demo28:反转单链表;
demo29:通过两个栈实现一个队列;
demo30:二分查找;
demo31:快速排序;
demo32:获得一个int型的数中二进制中的个数;
demo33:输入一个数组，实现一个函数，让所有奇数都在偶数前面;
demo34:判断一个字符串是否是另一个字符串的子串;
demo35:把一个int型数组中的数字拼成一个串，这个串代表的数字最小;
demo36:输入一颗二叉树，输出它的镜像（每个节点的左右子节点交换位置）;
demo37:输入两个链表，找到它们第一个公共节点;

排序部分：
demo1:桶排序